plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
}

group = 'com.nhnacademy.marketgg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "2021.0.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.cloud:spring-cloud-config-client'
    implementation 'commons-fileupload:commons-fileupload:1.4'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.80.Final:osx-aarch_64'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-inline:4.7.0'

    runtimeOnly 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'
}

jacoco {
    toolVersion = '0.8.8'
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    dependsOn test

    reports {
        // SonarQube 분석에 필요한 xml 파일만 생성
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}

sonarqube {
    properties {
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}